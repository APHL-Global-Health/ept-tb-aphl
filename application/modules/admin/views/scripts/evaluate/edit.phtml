<?php
$shipmentListSession = new Zend_Session_Namespace('shipmentList');
$urlListArray = $shipmentListSession->editUrlList;
$this->currentUrl;
$pos = array_search($this->currentUrl,$urlListArray);
$prev = $pos-1;
$next = $pos+1;
$previousLink = $nextLink = "";
if ($prev >= 0) {
	$previousLink = $urlListArray[$prev];
}
if ($next < count($urlListArray)) {
	$nextLink = $urlListArray[$next];
}
$reportDate = explode(" ", $this->evaluateData['shipment']['shipment_test_report_date']);
$attributes = json_decode($this->evaluateData['shipment']['attributes'], true);
$correctiveActions = array();
if ($this->scheme == 'tb' && isset($attributes['corrective_actions'])) {
    $correctiveActions = $attributes['corrective_actions'];
} ?>
<br/>
<legend>Participant Result Summary</legend>
<h5 style="border-bottom:1px solid #999;padding-bottom:10px;">
    <strong>Participant/Lab Name :</strong> <?php echo $this->evaluateData['participant']['first_name']. " ".$this->evaluateData['participant']['last_name']; ?>
    <span class="pull-right"><strong>Reported on :</strong> <?php echo $this->dateFormat($reportDate[0]); ?></span>
</h5>
<form name="updateResultsForm" id="updateResultsForm" method="post" action=""
      onsubmit="return validateNow();return false;">
	<input type="hidden" name="shipmentId" id="shipmentId" value="<?php echo $this->evaluateData['shipment']['shipment_id']; ?>" />
    <input type="hidden" name="shipmentDate" id="shipmentDate" value="<?php echo $this->dateFormat($this->evaluateData['shipment']['shipment_receipt_date']); ?>" />
    <input type="hidden" name="responseDeadlineDate" id="responseDeadlineDate" value="<?php echo $this->dateFormat($this->evaluateData['shipment']['lastdate_response']); ?>" />
    <input type="hidden" name="participantId" id="participantId" value="<?php echo $this->evaluateData['shipment']['participant_id']; ?>" />
	<input type="hidden" name="smid" id="smid" value="<?php echo $this->evaluateData['shipment']['map_id']; ?>" />
	<input type="hidden" name="scheme" id="scheme" value="<?php echo $this->scheme; ?>" />   
	<input type="hidden" name="whereToGo" id="whereToGo" value="" />
<?php
if ($this->scheme == 'eid') {
	include('edit-eid-evaluation.phtml');
} else if ($this->scheme == 'dts') {
	include('edit-dts-evaluation.phtml');
} else if ($this->scheme == 'dbs') {
	include('edit-dbs-evaluation.phtml');
} else if ($this->scheme == 'vl') {
	include('edit-vl-evaluation.phtml');
} else if ($this->scheme == 'tb') {
    include('edit-tb-evaluation.phtml');
} else { ?>
    <br/>
    <br/>
    <br/>
    <h4 style='text-align:center;'>
        Evaluation for this scheme (<?php echo $this->scheme ?>) is not yet implemented
    </h4>
    <br/>
    <br/>
    <br/>
<?php
}
$evalComments = array();
if (isset($this->evaluateData['evalComments'])) {
	foreach ($this->evaluateData['evalComments'] as $ec) {
		$evalComments[$ec['comment_id']]= $ec['comment'];
	}
} ?>
<table class="table table-bordered" style="width:<?php if($this->scheme == 'tb') { echo "100%"; } else { echo "70%"; } ?>;margin:0 auto;">
	<tr>
		<td style="width:25%;vertical-align: middle">Notes</td>
		<td>
        <?php
        if (isset($this->evaluateData['shipment']['failure_reason']) && $this->evaluateData['shipment']['failure_reason'] != "[]") {
            $warnings = json_decode($this->evaluateData['shipment']['failure_reason'],true);
            if ($warnings != "" && $warnings != null) {
                echo "<table class='table table-bordered'>";
                echo "<tr><th>Failure Reasons (or) Warnings</th><th>Corrective Actions (if any)</th></tr>";
                foreach ($warnings as $warning) { ?>
                        <tr>
                            <td><?php echo (isset($warning['warning']) ? $warning['warning'] : ""); ?></td>
                            <td><?php echo (isset($warning['correctiveAction']) ? $warning['correctiveAction'] : ""); ?></td>
                        </tr>
                <?php
                }
                echo "</table>";
            } else {
                echo " No Warnings or Corrective Actions ";
            }
        } else {
            echo " No Warnings or Corrective Actions ";
        } ?>
		</td>		
	</tr>
    <?php
    if ($this->scheme == 'tb') {
        if (isset($this->followsUpFrom) &&
            count($this->correctiveActionsFromPreviousRound) > 0) { ?>
    <tr>
        <td style="width:25%;vertical-align: middle">Corrective Actions
            from <?php echo $this->followsUpFrom ?></td>
        <td>
            <ul id="followUpCorrectiveActionsList" class="list-unstyled">
                <?php
                for ($i = 0; $i < count($this->correctiveActionsFromPreviousRound); $i++) { ?>
                    <li id="followUpCorrectiveActionItem<?php echo $i ?>" class="input-group">
                        <input type="checkbox" id="correctiveActionsFromPreviousRound<?php echo $i ?>"
                               name="correctiveActionsFromPreviousRound[]"
                               <?php echo $this->correctiveActionsFromPreviousRound[$i]['checked_off'] ? ' checked' : '' ?>
                               value="<?php echo $this->correctiveActionsFromPreviousRound[$i]['corrective_action'] ?>"
                        />
                        <label for="correctiveActionsFromPreviousRound<?php echo $i ?>"><?php echo $this->correctiveActionsFromPreviousRound[$i]['corrective_action'] ?></label>
                    </li>
                    <?php
                } ?>
            </ul>
        </td>
    </tr>
            <?php
        }?>
    <tr>
        <td style="width:25%;vertical-align: middle">Corrective Actions</td>
        <td>
            <ul id="correctiveActionsList" class="list-unstyled">
            <?php
            for ($i = 0; $i < count($correctiveActions); $i++) { ?>
            <li id="correctiveActionItem<?php echo $i ?>" class="input-group">
                <input type="text" id="correctiveActions<?php echo $i ?>" name="correctiveActions[]" class="form-control" value="<?php echo $correctiveActions[$i] ?>" />
                <span class="input-group-btn">
                    <button id="removeCorrectiveAction<?php echo $i ?>" class="btn btn-danger" type="button" onclick="removeCorrectiveAction(<?php echo $i ?>)"><i class="icon-remove"></i></button>
                </span>
            </li>
            <?php
            } ?>
                <li id="correctiveActionItemX">
                    <input type="text" id="correctiveActionsX" name="correctiveActions[]" class="form-control" onkeydown="correctiveActionReturnPressed(event)" />
                </li>
            </ul>
        </td>
    </tr>
        <?php
    } ?>
	<tr>
		<td style="width:25%;vertical-align: middle">Evaluation Comment</td>
		<td>
            <select class="form-control" name="comment" id="comment">
			<?php echo $this->dropdownSelection($evalComments,$this->evaluateData['shipment']['evaluation_comment'],true); ?>
			</select>
		</td>		
	</tr>
	<tr>
		<td style="vertical-align: middle;">
			Optional Extra Comments
		</td>
		<td>
            <textarea class="form-control" name="optionalComments" id="optionalComments"><?php echo $this->evaluateData['shipment']['optional_eval_comment']; ?></textarea>
        </td>
	</tr>
    <?php
    if ($this->scheme != 'tb') { ?>
        <tr>
            <td style="vertical-align: middle;" colspan="2">
                <label>Is the above a follow up comment for corrective action ? </label>
                <input type="radio" name="isFollowUp"
                       id="followUpYes" <?php echo ((isset($this->evaluateData['shipment']['is_followup']) && $this->evaluateData['shipment']['is_followup'] == "yes") || (isset($this->evaluateData['shipment']['failure_reason']) && $this->evaluateData['shipment']['failure_reason'] != "[]")) ? " checked='checked' " : ""; ?>
                       value="yes" title="Please choose whether this is a follow up comment or not"/> Yes
                <input type="radio" name="isFollowUp"
                       id="followUpNo" <?php echo (isset($this->evaluateData['shipment']['is_followup']) && $this->evaluateData['shipment']['is_followup'] == "no") ? " checked='checked' " : ""; ?>
                       value="no"/> No
            </td>
        </tr>
        <?php
    } ?>
</table>
<table class="table table-bordered table-striped table-hover" style="width:<?php if($this->scheme == 'tb') { echo "100%"; } else { echo "70%"; } ?>;margin:30px auto 0 auto;">
	<tr>
		<td style="vertical-align: middle;" colspan="2">
			<label style="float: left;margin-top:10px;">Do you want to exclude this response from evaluation ? </label>
			<div style="width:80px;float:left;margin-left:10px;">
				<select name="isExcluded" id="isExcluded" class="form-control isRequired"
                        title="Please choose whether this response is excluded from evaluation or not">
					<option <?php echo (isset($this->evaluateData['shipment']['is_excluded']) && $this->evaluateData['shipment']['is_excluded'] =="no") ? " selected='selected' " : ""; ?>
                            value="no">No</option>
					<option <?php echo (isset($this->evaluateData['shipment']['is_excluded']) && $this->evaluateData['shipment']['is_excluded'] =="yes") ? " selected='selected' " : ""; ?>
                            value="yes">Yes</option>
				</select>
			</div>
		</td>
	</tr>
</table>
<?php
if (isset($this->haveCustom) && $this->haveCustom == 'yes') { ?>
<fieldset>
<legend>Custom Fields</legend>
    <table>
        <tr>
            <th style="width:250px;padding:5px;"><?php echo $this->customField1; ?> </th>
            <td style="padding:5px;"><input name="customField1" id="customField1" type="text" size="80" maxlength="40" value="<?php echo  $this->evaluateData['shipment']['custom_field_1']; ?>"/></td>
        </tr>
        <?php if(isset($this->customField2) && $this->customField2 != ""){ ?>
        <tr>
            <th style="width:250px;padding:5px;"><?php echo $this->customField2; ?> </th>
            <td style="padding:5px;"><input name="customField2" id="customField2" type="text" value="<?php echo  $this->evaluateData['shipment']['custom_field_2']; ?>"/></td>
        </tr>
        <?php } ?>
    </table>
</fieldset>
<?php
} ?>
<br/>
<div id="respond" style="margin: 10px auto 10px auto; text-align: center;" align="center">
	<h5>Currently editing result <?php echo $pos+1 . " of ".count($urlListArray); ?> </h5>
	<?php
	if (isset($previousLink) && $previousLink != "") { ?>
		<button class="btn btn-primary" type="button" onclick="$('#whereToGo').val('<?php echo $previousLink; ?>');$.blockUI();$('#updateResultsForm').submit();return false;"><span><i class="icon-chevron-left"></i> Update and Previous</span></button>
    <?php
	} ?>
	<button class="btn btn-primary" type="button" onclick="$('#whereToGo').val('');$.blockUI();$('#updateResultsForm').submit();return false;"><span>Update</span></button>
	<?php
    if (isset($nextLink) && $nextLink != "") { ?>
	<button class="btn btn-primary" type="button" onclick="$('#whereToGo').val('<?php echo $nextLink; ?>');$.blockUI();$('#updateResultsForm').submit();return false;"><span>Update and Next <i class="icon-chevron-right"></i></span></button>
	<?php
	} ?>
	<input class="btn btn-danger" type="button" onclick="document.location='/admin/evaluate/shipment/sid/<?php echo base64_encode($this->evaluateData['shipment']['shipment_id']); ?>'" tabindex="8" value="Back to Listing "/>
</div>
</form>
<?php
$vHelper = $this->getHelper('DateFormat');
$dtFormat=  $vHelper->getDateFormat();
?>
<script type="text/javascript">
  $(document).ready(function() {
    $(".datepicker" ).datepicker({dateFormat: '<?php echo $dtFormat;?>'});
  });

  var lastValue;

  $("#isExcluded").on("click", function(e) {
    lastValue = $(this).val();
  }).bind("change", function(e) {
    var changeConfirmation = confirm("Are you sure you want to change this ?");
    if (changeConfirmation) {
      // Proceed as planned
    } else {
      $(this).val(lastValue);
    }
  });

  $('#supervisorApproval').change(function () {
    if ($('#supervisorApproval').val() == 'yes') {
      $('#labSupervisor').show();
      $('#participantSupervisor').val('');
      $('#participantSupervisor').show();
    } else {
      $('#labSupervisor').hide();
      $('#participantSupervisor').val('');
      $('#participantSupervisor').hide();
    }
  });

  <?php
  if ($this->scheme == 'tb') { ?>
  function removeCorrectiveAction(index) {
    $('#correctiveActionItem' + index).remove();
  }

  var correctiveCationCount = <?php echo count($correctiveActions) ?>;
  function correctiveActionReturnPressed(e) {
    if (e.keyCode === 13 && $('#correctiveActionsX').val()) {
      $('#correctiveActionItemX').before('<li id="correctiveActionItem' + correctiveCationCount +
        '" class="input-group"><input type="text" id="correctiveActions' + correctiveCationCount +
        '" name="correctiveActions[]" class="form-control" value="' + $('#correctiveActionsX').val() +
        '" /><span class="input-group-btn"><button id="removeCorrectiveAction' + correctiveCationCount +
        '" class="btn btn-danger" type="button" onclick="removeCorrectiveAction(' + correctiveCationCount +
        ')"><i class="icon-remove"></i></button></span></li>');
      $('#correctiveActionsX').val('');
      correctiveCationCount++;
    }
  }
  <?php
  } ?>

  function validateNow(){
    $.blockUI();

    <?php
      if ($this->scheme == 'tb') { ?>
    var validationMessage = '';
    if (!$("#receiptDate").val()) {
      validationMessage += '\n- Please ensure Shipment Receipt Date has been entered';
    }

    if (!$("#sampleRehydrationDate").val()) {
      validationMessage += '\n- Please ensure Sample Rehydration Date has been entered';
    } else if ($("#receiptDate").val() &&
      moment($("#sampleRehydrationDate").val()).diff(moment($("#receiptDate").val())) < 0) {
      validationMessage += '\n- Sample Rehydration Date has to come after the Shipment Receipt Date';
    }

    if (!$("#testDate").val()) {
      validationMessage += '\n- Please ensure Testing Date has been entered';
    } else if ($("#sampleRehydrationDate").val() &&
      moment($("#testDate").val()).diff(moment($("#sampleRehydrationDate").val())) < 0) {
      validationMessage += '\n- Testing Date has to come after the Sample Rehydration Date';
    }

    if (!$("#expiryDate").val()) {
      validationMessage += '\n- Please ensure Expiry Date has been entered';
    }

    if (!$("#testReceiptDate").val()) {
      validationMessage += '\n- Please ensure Response Date has been entered';
    } else if ($("#testDate").val() &&
      moment($("#testReceiptDate").val()).diff(moment($("#testDate").val())) < 0) {
      validationMessage += '\n- Response Date has to come after the Testing Date';
    }

    if (!$("#mtbRifKitLotNo").val()) {
      validationMessage += '\n- Please ensure MTB/RIF Kit Lot No has been entered';
    }

    if (!$("#modeOfReceipt").val()) {
      validationMessage += '\n- Please ensure Mode of Receipt has been specified';
    }

    if (!$("#assay").val()) {
      validationMessage += '\n- Please ensure Assay has been specified';
    }

    if ($('#qcDoneYes').is(':checked')) {
      if (!$("#qcDate").val()) {
        validationMessage += '\n- Please ensure QC Date has been entered';
      } else if ($("#testDate").val() &&
        moment($("#qcDate").val()).diff(moment($("#testDate").val())) < 0) {
        validationMessage += '\n- QC Date has to come after the Testing Date';
      }

      if (!$("#qcDoneBy").val()) {
        validationMessage += '\n- Please ensure QC Done By has been entered';
      }
    }

    if($('#supervisorApproval').val() === 'yes' && !$("#participantSupervisor").val()) {
      validationMessage += '\n- Please ensure Supervisor Name has been entered';
    }

    var dateTestedValidationCaught = false;
    $('[name="dateTested[]"]').each(function() {
      if (!dateTestedValidationCaught) {
        if (!$(this).val()) {
          validationMessage += '\n- Please ensure Date Tested has been specified for each sample';
          dateTestedValidationCaught = true;
        } else if ($("#sampleRehydrationDate").val() &&
          moment($("#testDate").val()).diff(new Date($("#sampleRehydrationDate").val())) < 0) {
          validationMessage += '\n- Testing Date for each sample has to come after the Sample Rehydration Date';
          dateTestedValidationCaught = true;
        }
      }
    });

    var mtbDetectedValidationCaught = false;
    var mtbDetectedIndex = 0;
    var rifResistanceValidationCaught = false;
    var errorCodeValidationCaught = false;
    $('[name="mtbDetected[]"]').each(function() {
      if (!mtbDetectedValidationCaught) {
        if (!$(this).val()) {
          validationMessage += '\n- Please ensure MTB Detected has been specified for each sample';
          mtbDetectedValidationCaught = true;
        }
      }
      if (!rifResistanceValidationCaught) {
        if (['high', 'medium', 'low', 'veryLow'].includes($(this).val()) &&
          !['detected', 'notDetected'].includes($('[name="rifResistance[]"]').eq(mtbDetectedIndex).val())) {
          validationMessage += '\n- If MTB was detected in a sample, please specify whether Rif Resistance was detected';
          rifResistanceValidationCaught = true;
        } else if (!['high', 'medium', 'low', 'veryLow', 'error'].includes($(this).val()) &&
          $('[name="rifResistance[]"]').eq(mtbDetectedIndex).val() !== 'na') {
          validationMessage += '\n- If there was no result or an invalid result for a sample, Rif Resistance should be N/A';
          rifResistanceValidationCaught = true;
        }
      }
      if (!errorCodeValidationCaught && $(this).val() === 'error' &&
        !$('[name="errorCode[]"]').eq(mtbDetectedIndex).val()) {
        validationMessage += '\n- If the result was an error, please specify what the error code was';
        errorCodeValidationCaught = true;
      }
      mtbDetectedIndex++;
    });

    var probeValueValidationCaught = false;
    $('[name="probeD[]"],[name="probeC[]"],[name="probeE[]"],[name="probeB[]"],[name="spc[]"],[name="probeA[]"]')
      .each(function() {
        if (!probeValueValidationCaught) {
          if (!$(this).val()) {
            validationMessage += '\n- Please ensure all SPC and Probe values have been specified for each sample';
            probeValueValidationCaught = true;
          } else if (!$.isNumeric($(this).val())) {
            validationMessage += '\n- Please ensure all SPC and Probe values are valid numbers';
            probeValueValidationCaught = true;
          }
        }
      });

    if (validationMessage) {
      alert('Validation Check' + validationMessage);
      $.unblockUI();
      return false;
    }
    <?php
      } else { ?>
    var dates=[];
    $(".sampleTestDate").each(function() {
      if ($(this).val()) {
        dates.push(new Date($(this).val()));
      }
    });
    if (dates.length > 0) {
      var maxDate = new Date(Math.max.apply(null, dates));
      $("#testDate").val(moment(maxDate).format('DD-MMM-YYYY'));
    }
    if (moment($("#receipt_date").val()).isAfter($("#test_date").val())) {
      alert('Testing Date has to come after the Shipment Receipt Date');
      $.unblockUI();
      return false;
    }
    <?php
      } ?>

    var flag = deforayValidator.init({
      formId: 'updateResultsForm'
    });
    if(!flag) {
      $.unblockUI();
    }
    return flag;
  }
</script>